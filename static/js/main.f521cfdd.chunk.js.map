{"version":3,"sources":["components/ClickZone.js","components/MineField.js","App.js","serviceWorker.js","index.js"],"names":["ClickZone","props","value","onClick","event","preventDefault","handler","id","className","style","paddingLeft","height","width","textAlign","background","_","require","MineField","initialState","range","map","num","useState","packing","setPacking","useEffect","setWinner","checkWinner","turn","setTurn","winner","translator","values","reduce","a","b","includes","filter","v","length","clickHandle","o","marginLeft","slice","key","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f521cfdd.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nfunction ClickZone(props) {\n\n    if (props.value === \"\") {\n        return <button onClick={event => {\n            event.preventDefault();\n            props.handler(props.id)\n        }} className=\"pure-button\"\n                       style={{\n                           paddingLeft: \"15px\", height: \"40px\", width: \"45px\", textAlign: \"left\"\n                       }}>&nbsp; </button>\n    } else {\n        return (\n            <button onClick={event => {\n                event.preventDefault();\n                props.handler(props.id)\n            }} className=\"pure-button\"\n                    style={{\n                        paddingLeft: \"15px\",\n                        height: \"40px\",\n                        width: \"45px\",\n                        textAlign: \"left\",\n                        background: props.value === \"x\" ? \"#99d8d0\":\"#f54291\"\n                    }}>&nbsp; </button>\n        )\n    }\n}\n\nexport default ClickZone;","import React, {useEffect, useState} from 'react';\nimport ClickZone from \"./ClickZone\";\n\nconst _ = require('lodash');\n\nfunction MineField(props) {\n\n    const initialState =\n        _.range(0, 9, 1).map(num => {\n            return {id: num, value: \"\"}\n        })\n\n\n    const [packing, setPacking] = useState(initialState)\n\n    useEffect(() => {\n        setWinner(checkWinner)\n    }, [packing])\n\n    const [turn, setTurn] = useState(\"x\")\n    const [winner, setWinner] = useState(\"\")\n\n\n    const translator = (value) => {\n        switch (value) {\n            case \"x\":\n                return 1\n            case \"o\":\n                return -1\n            default:\n                return 0\n        }\n    }\n\n    const checkWinner = () => {\n        // Manually code this due to lack of time\n        let values = [\n            [0, 1, 2].map(num => translator(packing[num].value)).reduce((a, b) => a + b),\n            [3, 4, 5].map(num => translator(packing[num].value)).reduce((a, b) => a + b),\n            [6, 7, 8].map(num => translator(packing[num].value)).reduce((a, b) => a + b),\n\n            [0, 3, 6].map(num => translator(packing[num].value)).reduce((a, b) => a + b),\n            [1, 4, 7].map(num => translator(packing[num].value)).reduce((a, b) => a + b),\n            [2, 5, 8].map(num => translator(packing[num].value)).reduce((a, b) => a + b),\n\n            [0, 4, 8].map(num => translator(packing[num].value)).reduce((a, b) => a + b),\n            [2, 4, 6].map(num => translator(packing[num].value)).reduce((a, b) => a + b),]\n\n\n        if (values.includes(3)) {\n            return \"x\"\n        } else if (values.includes(-3)) {\n            return \"o\"\n        }\n        if (packing.filter(v => v.value === \"\").length === 0) {\n            return \"everyone\"\n        }\n        return \"\"\n    }\n\n    const clickHandle = (id) => {\n\n        if (winner === \"\") {\n            if (packing[id].value === \"\") {\n                if (turn === \"x\") {\n                    setTurn(\"o\")\n                } else {\n                    setTurn(\"x\")\n                }\n\n                setPacking([...packing.map(o => {\n                        if (o.id === id) {\n                            return {id: id, value: turn}\n                        } else {\n                            return o\n                        }\n                    })]\n                )\n            }\n        }\n    }\n\n    const reset = () => {\n        setWinner(\"\")\n        setPacking(initialState)\n        setTurn(\"x\")\n    }\n\n    if (winner === \"\") {\n        return (\n            <>\n                <h1 style={{marginLeft: \"1%\"}}>Tic tac toe</h1>\n                <h4 style={{marginLeft: \"1.5%\"}}>Turn: {turn}</h4>\n                <div className={\"pure-g\"} style={{marginLeft: \"1%\"}}>\n                    {packing.slice(0, 3).map(o => <ClickZone key={o.id} id={o.id} value={o.value}\n                                                             handler={clickHandle}/>)}\n                </div>\n                <div className={\"pure-g\"} style={{marginLeft: \"1%\"}}>\n                    {packing.slice(3, 6).map(o => <ClickZone key={o.id} id={o.id} value={o.value}\n                                                             handler={clickHandle}/>)}\n                </div>\n                <div className={\"pure-g\"} style={{marginLeft: \"1%\"}}>\n                    {packing.slice(6, 9).map(o => <ClickZone key={o.id} id={o.id} value={o.value}\n                                                             handler={clickHandle}/>)}\n                </div>\n            </>\n        );\n    } else {\n        return (\n            <>\n                <h1 style={{marginLeft: \"0.5%\"}}>TIC_TAC_TOE</h1>\n                <h4 style={{marginLeft: \"1.5%\"}}>Turn: {turn}</h4>\n                <div className={\"pure-g\"} style={{marginLeft: \"1%\"}}>\n                    {packing.slice(0, 3).map(o => <ClickZone key={o.id} id={o.id} value={o.value}\n                                                             handler={clickHandle}/>)}\n                </div>\n                <div className={\"pure-g\"} style={{marginLeft: \"1%\"}}>\n                    {packing.slice(3, 6).map(o => <ClickZone key={o.id} id={o.id} value={o.value}\n                                                             handler={clickHandle}/>)}\n                </div>\n                <div className={\"pure-g\"} style={{marginLeft: \"1%\"}}>\n                    {packing.slice(6, 9).map(o => <ClickZone key={o.id} id={o.id} value={o.value}\n                                                             handler={clickHandle}/>)}\n                </div>\n\n                <h3 style={{marginLeft: \"0.5%\"}}>The winner is {winner}</h3>\n\n                <button className={\"pure-button\"}\n                        style={{background: \"#f1c5c5\", marginLeft: \"30px\"}}\n                        onClick={() => reset()}>Reset\n                </button>\n            </>\n        );\n    }\n\n}\n\nexport default MineField;","import React from 'react';\nimport MineField from \"./components/MineField\";\n\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n\n                <MineField/>\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}